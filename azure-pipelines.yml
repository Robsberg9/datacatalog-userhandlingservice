# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master
  - develop
  - feature/*

stages:
  - stage: Build
    jobs:
      - job: Build
        pool:
          vmImage: 'ubuntu-latest'

        steps:
          - task: Gradle@2
            inputs:
              workingDirectory: ''
              gradleWrapperFile: 'gradlew'
              gradleOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              tasks: 'assemble'
          - task: CopyFiles@2
            inputs:
              SourceFolder: '/home/vsts/work/1/s/build/libs/'
              Contents: '*'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop'
              publishLocation: 'Container'
  - stage: Deploy
    jobs:
      - job: Deploy
        pool:
          vmImage: 'vs2017-win2016'

        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: $(azureSubscription)
           #   azureSubscription: 'Azure for Students(1c8fc954-ebe4-4148-836e-b4dfa8515377)'
              appType: 'apiApp'
              WebAppName: 'datacatalog-userhandlingservice'
              packageForLinux: '$(System.ArtifactsDirectory)/drop/*'
